@* 
    This view displays a single workout, including the Notes property. 
    Includes max set logic for dynamic columns.
    This view follows the same basic logic as the Index view.
*@

@model Workout

@* Checking the max number of sets to display correct number of columns in the view for the sets *@
@* If no workouts exist, maxSets will be 0 to avoid rendering extra table columns *@
@{
    var maxSets = Model.Sets.Any() ? Model.Sets.Count : 0;
}

<!DOCTYPE html>

<html>
<head>
    <title>View Workout</title>
</head>
<body>
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="Workout" asp-action="Index">All Workouts</a></li>
        <li class="breadcrumb-item active" aria-current="page">View Workout</li>
    </ol>
</nav>
<div class="card rounded-3">
    <div class="card-body">
        <h2 class="card-title">@Model.ExerciseName</h2>
        <p class="lead">@Model.WorkoutDate.ToString("yyyy-MM-dd")</p>
        <div class="table-container">
            <table class="table table-sm table-borderless">
                <thead>
                <tr>
                    <th rowspan="2" class="align-middle">Exercise</th>
                    @for (int i = 1; i <= maxSets; i++)
                    {
                        <th class="text-center" colspan="2">Set @i</th>
                    }
                    
                    <th rowspan="2"></th>
                </tr>
                <tr>
                    @for (int i = 1; i <= maxSets; i++)
                    {
                        <th>Weight</th>
                        <th>Reps</th>
                    }
                </tr>
                </thead>
    
                <tr class="align-middle">
                    <td>@Model.ExerciseName</td>
                    @for (int i = 0; i < Model.Sets.Count(); i++)
                    {
                        if (i < Model.Sets.Count())
                        {
                            <td>@Model.Sets[i].Weight</td>
                            <td>@Model.Sets[i].Reps</td>
                        }
                        else
                        {
                            <td></td>
                            <td></td>
                        }
                    }
                    
                    <td class="text-end">
                        <div class="d-flex justify-content-end gap-1">
                            <a class="btn btn-outline-secondary btn-sm" href="/Workout/UpdateWorkout/@Model.WorkoutId">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil me-1" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                </svg> Edit</a>
                            @using (Html.BeginForm("DeleteWorkout", "Workout", FormMethod.Post))
                            {
                                <input type="hidden" name="Id" value="@Model.WorkoutId"/>
                                <button type="submit" class="btn btn-outline-danger btn-sm"
                                        onclick="return confirm('Are you sure you want to delete this workout?')">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                         class="bi bi-trash3" viewBox="0 0 16 16">
                                        <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5"/>

                                    </svg>

                                </button>
                            }
                        </div>
                    </td>
                
                </tr>
            </table>
            
                
        </div>
        <div class="card col-5 mt-5 ms-4">
            <div class="card-header">
                Notes
            </div>

            <div class="card-body">
                <blockquote class="blockquote">
                    <p>@Model.Notes</p>

                </blockquote>
            </div>
        </div>
    </div>
    
</div>
    
</body>
</html>